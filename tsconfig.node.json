/**
 * @file TypeScript configuration for the Node.js environment.
 * @description This file contains the TypeScript compiler options for files that are part of the build process
 * and run in a Node.js environment, such as `vite.config.ts`.
 */
{
  "compilerOptions": {
    /**
     * @property {string} target - The ECMAScript target version. ES2022 is a recent standard supported by modern Node.js versions.
     */
    "target": "ES2022",
    /**
     * @property {Array<string>} lib - The set of library files to be included. ES2023 provides modern JavaScript features suitable for a Node environment.
     */
    "lib": ["ES2023"],
    /**
     * @property {string} module - The module system. ESNext allows for the use of modern module syntax (e.g., import/export).
     */
    "module": "ESNext",
    /**
     * @property {boolean} skipLibCheck - Skips type checking of all declaration files (*.d.ts).
     */
    "skipLibCheck": true,

    /* Bundler mode */
    /**
     * @property {string} moduleResolution - 'bundler' mode is optimized for how modern bundlers resolve modules.
     */
    "moduleResolution": "bundler",
    /**
     * @property {boolean} allowImportingTsExtensions - Allows importing TypeScript files with a .ts extension.
     */
    "allowImportingTsExtensions": true,
    /**
     * @property {boolean} isolatedModules - Ensures each file can be safely transpiled without relying on other imports.
     */
    "isolatedModules": true,
    /**
     * @property {string} moduleDetection - 'force' ensures that each file is treated as a module.
     */
    "moduleDetection": "force",
    /**
     * @property {boolean} noEmit - Prevents the compiler from generating output files.
     */
    "noEmit": true,

    /* Linting */
    /**
     * @property {boolean} strict - Enables all strict type-checking options.
     */
    "strict": true,
    /**
     * @property {boolean} noUnusedLocals - Reports errors on unused local variables.
     */
    "noUnusedLocals": true,
    /**
     * @property {boolean} noUnusedParameters - Reports errors on unused parameters.
     */
    "noUnusedParameters": true,
    /**
     * @property {boolean} noFallthroughCasesInSwitch - Reports errors for fallthrough cases in switch statements.
     */
    "noFallthroughCasesInSwitch": true
  },
  /**
   * @property {Array<string>} include - An array of file paths to be included. This config specifically targets `vite.config.ts`.
   */
  "include": ["vite.config.ts"]
}